Day 18 
Exercise 1 : Implementing app router
1.0 We maintained UI Module in MTA.yaml file as below
- name: capm-ui
    type: nodejs
    path: app
    parameters:
      buildpack: nodejs_buildpack
    requires:
      - name: srv-api
        group: destinations
        properties:
          name: srv-api
          strictSSL: true
          forwardAuthToken: true
          url: '~{srv-url}'
1.1 go inside purchaseorder folder and cut package.json and put in app folder
1.2 cd projectdir/app - npm install @sap/approuter
1.3 specify the start script for our application which starts app router - app/package.json
"scripts": {
        "start": "node node_modules/@sap/approuter/approuter.js",
        "deploy-config": "npx -p @sap/ux-ui5-tooling fiori add deploy-config cf"
    },
1.4 create a new file app/xs-app.json 
{
    "welcomeFile": "purchaseordapp/webapp/",
    "authenticationMethod": "none",
    "sessionTimeout": 10,
    "pluginMetadataEndpoint": "/metadata",
    "routes": [
      {
        "source": "^/purchaseordapp/webapp/(.*)",
        "target": "$1",
        "localDir": "purchaseordapp/webapp/"        
      },
      {
        "source": "^/(.*)$",
        "destination": "srv-api"
      }
    ]
  }


Exercise 2 : Implementing XSUAA integration with IDP and App router
2.1 - Added the xs-security.json file for role definition at root folder of our app
{
    "xsappname": "capepm",
    "tenant-mode": "dedicated",
    "scopes": [
        {
            "name": "$XSAPPNAME.Viewer",
            "description": "Viewer"
        },
        {
            "name": "$XSAPPNAME.Admin",
            "description": "Administrator"
        }
    ],
    "attributes": [
        {
            "name": "BankName",
            "description": "BankName",
            "valueType": "string"
        }
    ],
    "role-templates": [
        {
            "name": "Viewer",
            "description": "Viewer",
            "attribute-references": [
                {
                    "name": "BankName"
                }
            ],
            "scope-references": [
                "$XSAPPNAME.Viewer"
            ]
        },
        {
            "name": "Admin",
            "description": "Administrator",
            "scope-references": [
                "$XSAPPNAME.Admin"
            ]
        }
    ]
}

2.2- Create a resource of managed cloud foundry service of type XSUAA
  - name: capepm-xsuaa
    type: org.cloudfoundry.managed-service
    description: Automatically created by CF
    parameters:
      service: xsuaa
      service-plan: application
      path: ./xs-security.json

2.3 Add this resource in require section of UI and SRV modules in mta

  - name: capepm-srv
    type: nodejs
    path: gen/srv
    parameters:
      buildpack: nodejs_buildpack
    build-parameters:
      builder: npm-ci
    provides:
      - name: srv-api
        properties:
          srv-url: '${default-url}'
    requires:
      - name: capepm-db
      - name: capepm-xsuaa
  - name: capm-ui
    type: nodejs
    path: app
    parameters:
      buildpack: nodejs_buildpack
    requires:
      - name: srv-api
        group: destinations
        properties:
          name: srv-api
          strictSSL: true
          forwardAuthToken: true
          url: '~{srv-url}'
      - name: capepm-xsuaa

2.4 Go back to App Router configuration and force App router to redirect us to XSUAA

{
    "welcomeFile": "purchaseordapp/webapp/",
    "authenticationMethod": "route",
    "sessionTimeout": 10,
    "pluginMetadataEndpoint": "/metadata",
    "routes": [
      {
        "source": "^/purchaseordapp/webapp/(.*)",
        "target": "$1",
        "localDir": "purchaseordapp/webapp/",
        "authenticationType": "xsuaa"        
      },
      {
        "source": "^/(.*)$",
        "destination": "srv-api",
        "authenticationType": "xsuaa"
      }
    ]
  }

2.5 Package, Deploy App --> testing in incoginto



Day 17 All commands
1. Add HANA DB Configuration
cds add hana
2. Install DB Driver
npm Install
3. Change Excel files, increase length of employee.bankid
4. Login to cloud foundry using one of below options
cf login /  cf login --sso
5. Build hana artifacts
cds build --production
6. Deploy to HANA DB in cloud
cds deploy --to hana
7. View find command - SAP HANA: Open Database Explorer
----------------Deploy to cf
7. Add MTAR file 
cds add mta
8. Right click on mta.yaml and Build MTAR
9. mta_archieve/folder.mtar right click and deploy
10. Added UI module